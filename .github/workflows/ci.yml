name: CI

on:
  push:
    branches: [ master, arxiv ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Lint with ruff
      run: |
        ruff check src/ tests/
        
    - name: Format check with black
      run: |
        black --check src/ tests/
        
    - name: Type check with mypy (if available)
      run: |
        pip install mypy || echo "mypy not available, skipping type check"
        mypy src/ || echo "Type checking failed or not configured"
      continue-on-error: true
        
    - name: Test with pytest
      run: |
        python -m pytest tests/ --cov=mcp_handley_lab --cov-report=xml --cov-report=term-missing -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-integration'))
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run integration tests
      run: |
        python -m pytest tests/ -m integration -v
      env:
        # Add any required API keys for integration tests here
        # GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PYTEST_MARKERS: integration
        
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/