[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-handley-lab"
version = "0.8.6b1"
description = "MCP Handley Lab - A comprehensive MCP toolkit for research productivity and lab management"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Handley Research Group", email = "wh260@cam.ac.uk"}
]
dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "google-api-python-client>=2.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-auth-oauthlib>=0.5.0",
    "google-genai>=1.24.0",
    "googlemaps>=4.0.0",
    "openai>=1.0.0",
    "anthropic>=0.21.3",
    "xai-sdk>=1.0.0",
    "Pillow>=10.0.0",
    "httpx>=0.25.0",
    "packaging>=21.0",
    "PyYAML>=6.0.0",
    "ruamel.yaml>=0.17.0",
    "tinydb>=4.8.0",
    "jmespath>=1.0.0",
    "watchdog>=3.0.0",
    "msal>=1.20.0",
    "chromadb>=1.0.0",
    "nbformat>=5.0.0",
    "nbclient>=0.8.0",
    "pyfzf>=0.3.1",
    "click>=8.0.0",
    "html2text>=2020.1.16",
    "beautifulsoup4>=4.12.0",
    "markdownify>=0.11.0",
    "python-dateutil>=2.8.0",
    "dateparser>=1.2.0",
    "pendulum>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-vcr>=1.0.0",
    "pytest-xdist>=3.0.0",
    "vcrpy>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "tomli>=2.0.0",
]
semantic = [
    "chromadb>=1.0.0",
]

[project.scripts]
mcp-jq = "mcp_handley_lab.jq.tool:mcp.run"
mcp-vim = "mcp_handley_lab.vim.tool:mcp.run"
mcp-code2prompt = "mcp_handley_lab.code2prompt.tool:mcp.run"
mcp-arxiv = "mcp_handley_lab.arxiv.tool:mcp.run"
mcp-google-calendar = "mcp_handley_lab.google_calendar.tool:mcp.run"
mcp-gemini = "mcp_handley_lab.llm.gemini.tool:mcp.run"
mcp-openai = "mcp_handley_lab.llm.openai.tool:mcp.run"
mcp-claude = "mcp_handley_lab.llm.claude.tool:mcp.run"
mcp-grok = "mcp_handley_lab.llm.grok.tool:mcp.run"
mcp-google-maps = "mcp_handley_lab.google_maps.tool:mcp.run"
mcp-email = "mcp_handley_lab.email.tool:mcp.run"
mcp-mutt-aliases = "mcp_handley_lab.email.mutt_aliases.tool:mcp.run"
mcp-github = "mcp_handley_lab.github.tool:mcp.run"
mcp-knowledge = "mcp_handley_lab.knowledge.generic_tools:mcp.run"
mcp-py2nb = "mcp_handley_lab.py2nb.tool:mcp.run"
mcp-handley-lab = "mcp_handley_lab.__main__:main"
mcp-cli = "mcp_handley_lab.cli.main:cli"


[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mcp_handley_lab = ["py.typed", "llm/*/models.yaml", "tool_schemas.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests (select with '-m unit')",
    "vcr: marks tests that use VCR.py for HTTP recording/playback",
    "slow: marks tests as slow running (deselect with '-m \"not slow\"')",
    "live: marks tests that require live API calls (deselect with '-m \"not live\"')",
]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "C4", "SIM"]
ignore = ["E501", "B008"]  # Line too long, function call in default arguments (intentional for FastMCP Field patterns)

[tool.ruff.lint.per-file-ignores]
"src/mcp_handley_lab/google_calendar/tool.py" = ["N815"]  # Allow mixedCase for Google Calendar API field names

[tool.coverage.run]
omit = [
    "src/mcp_handley_lab/__main__.py",
    "tests/*",
    "venv/*",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]
