interactions:
- request:
    body: '{"contents": [{"parts": [{"text": "What types of files are these and what
      do they contain?"}, {"text": "[File: tmp508l4so_.toml]\n[package]\nname = \"test\"\nversion
      = \"1.0.0\""}, {"text": "[File: tmpsv2zrcyp.diff]\ndiff --git a/file.txt b/file.txt\n+added
      line"}, {"text": "[File: tmpkk9lmedw.rs]\nfn main() {\n    println!(\"Hello
      Rust!\");\n}"}], "role": "user"}], "generationConfig": {"temperature": 0.7,
      "maxOutputTokens": 65536}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '436'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - google-genai-sdk/1.23.0 gl-python/3.13.3
      x-goog-api-client:
      - google-genai-sdk/1.23.0 gl-python/3.13.3
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
  response:
    body:
      string: "{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"parts\":
        [\n          {\n            \"text\": \"Here's an analysis of each file:\\n\\n---\\n\\n###
        File: `tmp508l4so_.toml`\\n\\n*   **Type:** This is a **TOML (Tom's Obvious,
        Minimal Language) configuration file**. The `.toml` extension is the giveaway,
        and the `key = \\\"value\\\"` structure with `[sections]` is characteristic
        of TOML.\\n*   **Content:** It contains metadata for a software package or
        project. Specifically, it defines the `name` as \\\"test\\\" and the `version`
        as \\\"1.0.0\\\". This type of file is commonly used in Rust projects (e.g.,
        `Cargo.toml`) to manage project settings and dependencies.\\n\\n---\\n\\n###
        File: `tmpsv2zrcyp.diff`\\n\\n*   **Type:** This is a **diff file**. The `.diff`
        extension and the content starting with `diff --git` are clear indicators.
        Diff files are used to represent changes between two versions of a file or
        set of files.\\n*   **Content:** It describes a change made to a file named
        `file.txt`. The line `+added line` indicates that the text \\\"added line\\\"
        was inserted into `file.txt`. This is a standard format used by version control
        systems like Git to show modifications.\\n\\n---\\n\\n### File: `tmpkk9lmedw.rs`\\n\\n*
        \  **Type:** This is a **Rust source code file**. The `.rs` extension is the
        standard for Rust programming language files.\\n*   **Content:** It contains
        a simple Rust program.\\n    *   `fn main() { ... }` defines the main function,
        which is the entry point of a Rust executable.\\n    *   `println!(\\\"Hello
        Rust!\\\");` is a macro that prints the string \\\"Hello Rust!\\\" to the
        console when the program is executed.\"\n          }\n        ],\n        \"role\":
        \"model\"\n      },\n      \"finishReason\": \"STOP\",\n      \"index\": 0\n
        \   }\n  ],\n  \"usageMetadata\": {\n    \"promptTokenCount\": 103,\n    \"candidatesTokenCount\":
        390,\n    \"totalTokenCount\": 1242,\n    \"promptTokensDetails\": [\n      {\n
        \       \"modality\": \"TEXT\",\n        \"tokenCount\": 103\n      }\n    ],\n
        \   \"thoughtsTokenCount\": 749\n  },\n  \"modelVersion\": \"gemini-2.5-flash\",\n
        \ \"responseId\": \"vvZkaP6FEa3NnsEPiJig2Ac\"\n}\n"
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 02 Jul 2025 09:07:10 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=5841
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
      content-length:
      - '2066'
    status:
      code: 200
      message: OK
version: 1
