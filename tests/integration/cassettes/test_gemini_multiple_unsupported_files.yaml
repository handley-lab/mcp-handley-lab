interactions:
- request:
    body: '{"contents": [{"parts": [{"text": "What types of files are these and what
      do they contain?"}, {"text": "[File: tmp7ktw2501.toml]\n[package]\nname = \"test\"\nversion
      = \"1.0.0\""}, {"text": "[File: tmp95ujrqes.diff]\ndiff --git a/file.txt b/file.txt\n+added
      line"}, {"text": "[File: tmp6je5ggsj.rs]\nfn main() {\n    println!(\"Hello
      Rust!\");\n}"}], "role": "user"}], "generationConfig": {"temperature": 0.7,
      "maxOutputTokens": 65536}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '436'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - google-genai-sdk/1.21.1 gl-python/3.13.3
      x-goog-api-client:
      - google-genai-sdk/1.21.1 gl-python/3.13.3
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
  response:
    body:
      string: "{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"parts\":
        [\n          {\n            \"text\": \"Let's break down each file:\\n\\n---\\n\\n###
        File: `tmp7ktw2501.toml`\\n\\n*   **Type of File:** This is a **TOML (Tom's
        Obvious, Minimal Language)** configuration file. The `.toml` extension is
        definitive.\\n*   **What it Contains:** It contains configuration data in
        a human-readable key-value pair format, organized into sections.\\n    *   The
        `[package]` header indicates a section related to a software package.\\n    *
        \  `name = \\\"test\\\"` specifies the name of the package.\\n    *   `version
        = \\\"1.0.0\\\"` specifies the version number of the package.\\n    *   **Common
        Use:** TOML files are widely used for configuration, especially in Rust projects
        (where `Cargo.toml` is the standard build configuration file), but also in
        other languages and tools for general application settings. This specific
        content is typical for defining basic package metadata.\\n\\n---\\n\\n###
        File: `tmp95ujrqes.diff`\\n\\n*   **Type of File:** This is a **Diff (Difference)
        file**, also often called a \\\"patch\\\" file. The `.diff` extension is standard
        for this.\\n*   **What it Contains:** It describes the changes between two
        versions of a text file or set of files.\\n    *   `diff --git a/file.txt
        b/file.txt` is a header indicating that this diff was generated by Git (a
        version control system) and compares an old version (`a/file.txt`) with a
        new version (`b/file.txt`).\\n    *   `+added line` indicates that the line
        \\\"added line\\\" was inserted into the `file.txt` in the new version.\\n
        \   *   **Common Use:** Diff files are used by version control systems (like
        Git, SVN, Mercurial) to track changes, review code, or apply updates (patches)
        to files. They provide a concise way to see exactly what has been added, removed,
        or modified.\\n\\n---\\n\\n### File: `tmp6je5ggsj.rs`\\n\\n*   **Type of File:**
        This is a **Rust source code file**. The `.rs` extension is the standard for
        Rust programming language files.\\n*   **What it Contains:** It contains source
        code written in the Rust programming language.\\n    *   `fn main() { ...
        }` defines the main function, which is the entry point of a Rust executable
        program.\\n    *   `println!(\\\"Hello Rust!\\\");` is a Rust macro that prints
        the string \\\"Hello Rust!\\\" to the standard output (usually the console).\\n
        \   *   **Common Use:** This is a complete, albeit very simple, Rust program.
        It's a classic \\\"Hello, World!\\\"-style example, demonstrating basic syntax
        and output. These files are compiled by the Rust compiler (`rustc`) into executable
        programs.\"\n          }\n        ],\n        \"role\": \"model\"\n      },\n
        \     \"finishReason\": \"STOP\",\n      \"index\": 0\n    }\n  ],\n  \"usageMetadata\":
        {\n    \"promptTokenCount\": 103,\n    \"candidatesTokenCount\": 613,\n    \"totalTokenCount\":
        1511,\n    \"promptTokensDetails\": [\n      {\n        \"modality\": \"TEXT\",\n
        \       \"tokenCount\": 103\n      }\n    ],\n    \"thoughtsTokenCount\":
        795\n  },\n  \"modelVersion\": \"gemini-2.5-flash\",\n  \"responseId\": \"8EFpaNn-FsLhnsEPz6HfuQ8\"\n}\n"
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 05 Jul 2025 15:17:04 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=7297
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
      content-length:
      - '3025'
    status:
      code: 200
      message: OK
version: 1
