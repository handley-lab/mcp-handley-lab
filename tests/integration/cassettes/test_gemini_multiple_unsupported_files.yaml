interactions:
- request:
    body: '{"contents": [{"parts": [{"text": "What types of files are these and what
      do they contain?"}, {"text": "[File: tmp0p80yihc.toml]\n[package]\nname = \"test\"\nversion
      = \"1.0.0\""}, {"text": "[File: tmpq7r6hx9s.diff]\ndiff --git a/file.txt b/file.txt\n+added
      line"}, {"text": "[File: tmp13xxp5x7.rs]\nfn main() {\n    println!(\"Hello
      Rust!\");\n}"}], "role": "user"}], "generationConfig": {"temperature": 1.0,
      "maxOutputTokens": 65536}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '436'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - google-genai-sdk/1.28.0 gl-python/3.13.5
      x-goog-api-client:
      - google-genai-sdk/1.28.0 gl-python/3.13.5
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
  response:
    body:
      string: "{\n  \"candidates\": [\n    {\n      \"content\": {\n        \"parts\":
        [\n          {\n            \"text\": \"Here's an analysis of each file:\\n\\n---\\n\\n###
        [File: tmp0p80yihc.toml]\\n\\n```toml\\n[package]\\nname = \\\"test\\\"\\nversion
        = \\\"1.0.0\\\"\\n```\\n\\n*   **Type:** This is a **TOML (Tom's Obvious,
        Minimal Language) configuration file**. TOML is a human-friendly configuration
        file format designed to be easily readable due to its straightforward semantics.\\n*
        \  **Content:** It contains **configuration data or metadata**, typically
        for a software project or application. In this specific example, it defines
        a `[package]` section with:\\n    *   `name`: The name of the package/project,
        which is \\\"test\\\".\\n    *   `version`: The version of the package/project,
        which is \\\"1.0.0\\\".\\n    This format is commonly seen in Rust projects
        (`Cargo.toml`), but also in other tools for configuration.\\n\\n---\\n\\n###
        [File: tmpq7r6hx9s.diff]\\n\\n```diff\\ndiff --git a/file.txt b/file.txt\\n+added
        line\\n```\\n\\n*   **Type:** This is a **Diff file (or Patch file)**. It's
        a plain text file that shows the differences between two sets of files. The
        `.diff` extension is standard for these.\\n*   **Content:** It contains a
        **record of changes made to a text file**. This specific example shows a \\\"unified
        diff\\\" format (common with Git) indicating that:\\n    *   The file `file.txt`
        was modified.\\n    *   A new line, `added line`, was **added** to `file.txt`.
        (The `+` symbol denotes an added line).\\n    Diff files are primarily used
        in version control systems to track changes, share modifications, or apply
        patches.\\n\\n---\\n\\n### [File: tmp13xxp5x7.rs]\\n\\n```rust\\nfn main()
        {\\n    println!(\\\"Hello Rust!\\\");\\n}\\n```\\n\\n*   **Type:** This is
        a **Rust source code file**. The `.rs` extension is the standard file extension
        for the Rust programming language.\\n*   **Content:** It contains **source
        code written in the Rust programming language**. This particular code is a
        very basic \\\"Hello, World!\\\"-style program:\\n    *   `fn main()`: Defines
        the main function, which is the entry point for a Rust executable.\\n    *
        \  `println!(\\\"Hello Rust!\\\");`: Uses the `println!` macro to print the
        string \\\"Hello Rust!\\\" to the standard output (usually the console) when
        the program is executed.\"\n          }\n        ],\n        \"role\": \"model\"\n
        \     },\n      \"finishReason\": \"STOP\",\n      \"index\": 0\n    }\n  ],\n
        \ \"usageMetadata\": {\n    \"promptTokenCount\": 107,\n    \"candidatesTokenCount\":
        560,\n    \"totalTokenCount\": 1522,\n    \"promptTokensDetails\": [\n      {\n
        \       \"modality\": \"TEXT\",\n        \"tokenCount\": 107\n      }\n    ],\n
        \   \"thoughtsTokenCount\": 855\n  },\n  \"modelVersion\": \"gemini-2.5-flash\",\n
        \ \"responseId\": \"CeCdaMf4MbGEkdUP9te3mQQ\"\n}\n"
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 14 Aug 2025 13:09:29 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=7766
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
      content-length:
      - '2713'
    status:
      code: 200
      message: OK
version: 1
